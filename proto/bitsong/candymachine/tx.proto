syntax = "proto3";
package bitsong.candymachine;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "bitsong/candymachine/candymachine.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/bitsongofficial/go-bitsong/x/candymachine/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the Msg service
service Msg {
  rpc CreateCandyMachine(MsgCreateCandyMachine) returns (MsgCreateCandyMachineResponse);
  rpc UpdateCandyMachine(MsgUpdateCandyMachine) returns (MsgUpdateCandyMachineResponse);
  rpc CloseCandyMachine(MsgCloseCandyMachine) returns (MsgCloseCandyMachineResponse);
  rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);
}

message MsgCreateCandyMachine {
  string sender = 1;
  bitsong.candymachine.v1beta1.CandyMachine machine = 2 [ (gogoproto.nullable) = false ];
}
message MsgCreateCandyMachineResponse {
}

message MsgUpdateCandyMachine {
  string sender = 1;
  bitsong.candymachine.v1beta1.CandyMachine machine = 2 [ (gogoproto.nullable) = false ];
}
message MsgUpdateCandyMachineResponse {}

message MsgCloseCandyMachine {
  string sender = 1;
  uint64 coll_id = 2;
}
message MsgCloseCandyMachineResponse {}

message MsgMintNFT {
  string sender = 1;
  uint64 collection_id = 2;
  string name = 3;
}
message MsgMintNFTResponse {}
